{"version":3,"sources":["components/layout/footer.js","components/home/homeview.js","components/firebase/firebase.js","components/layout/loggedInHeader.js","components/authentication/loginPopUp.js","components/layout/loggedOutHeader.js","components/mealPlan/SearchResultTile.js","components/mealPlan/searchBar.js","components/mealPlan/FoodItem.js","components/mealPlan/DragDropBox.js","components/mealPlan/weekPlan.js","components/mealPlan/nutriScore.js","components/mealPlan/MealPlannerPage.js","components/mealPlan/goals.js","components/userInfo/profile.js","components/authentication/register.js","App.js","serviceWorker.js","index.js","images/avatar.svg"],"names":["Footer","className","alt","href","React","Component","HomeView","state","user","error","firebase","auth","onAuthStateChanged","setState","this","to","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","GoogleAuthProvider","db","firestore","LoggedInHeader","logOutUser","signOut","then","window","location","catch","onClick","LoginPopUp","email","password","handleChange","e","target","id","value","handleSubmit","preventDefault","signInWithEmailAndPassword","forget","props","history","push","handleForget","sendPasswordResetEmail","LoginTrigger","trigger","actions","onSubmit","required","type","name","placeholder","onChange","style","LoggedOutHeader","SearchResultTile","dragStart","foodObj","label","cal","Cal","fat","Fat","pro","Pro","carbs","Carbs","qty","Qty","foodJSON","JSON","stringify","dataTransfer","setData","dragOver","stopPropagation","draggable","onDragStart","onDragOver","index","SearchBar","val","round","exp","Math","isNaN","toString","split","keyPressed","event","a","key","document","body","cursor","urlFood","encodeURI","searchTerm","axios","get","response","data","console","log","results","qtyGrams","collection","doc","icon","onKeyPress","step","min","hints","map","obj","food","nutrients","ENERC_KCAL","FAT","CHOCDF","PROCNT","length","FoodItem","onRemoveItem","i","flat","onDel","DragDropTest","drop","getData","parse","prevState","foodList","temp","groupFoodList","filter","item","j","totalNutr","foodListNutr","targetDel","bind","currentTarget","parseInt","grpFood","reduce","acc","cv","Object","keys","b","getTotalNutr","onDrop","WeekPlan","rows","NutriScore","planned_values","kcal","prots","fats","actual_values","nutriscore","getElementById","width","MealPlannerPage","rowcount","mealplansaved","creationcheck","totalNutrPlan","totalNutrReal","totalNutrRecomended","nutritionValues","addRow","saveMealplan","deleteMealplan","tileNutr","totalNutrWeek","foodArray","rowkey","joined","concat","createProcess","Goals","options","classes","dropdownOptions","alignment","autoTrigger","closeOnClick","constrainWidth","container","coverTrigger","hover","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","disabled","Profile","age","gender","height","weight","activityLevel","userId","uid","timestamp","Date","toLocaleString","set","preState","src","Avatar","message","Register","confirmPassword","createUserWithEmailAndPassword","App","path","component","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e7a0fbd5.chunk.js","sourcesContent":[" import React from 'react';\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer\">\r\n                <div className=\"footer-top\">\r\n                    <div className=\"footer-item\">\r\n                        <p className=\"bold\">planmy.ml</p>\r\n                        <p>Mealplans</p>\r\n                        <p>Recipes</p>\r\n                        <p>Goals</p>\r\n                        <p>About Us</p>\r\n                    </div>\r\n\r\n                    <div className=\"footer-item\">\r\n                        <img alt=\"cute little ilustration\"></img>\r\n                    </div>\r\n\r\n                    <div className=\"footer-item\">\r\n                        <p className=\"bold\">Contact & Suport</p>\r\n                        <p>FAQ</p>\r\n                        <p>Email</p>\r\n                        <p>Instagram</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-bottom\">\r\n                    <a href=\"https://www.google.com/\">Terms of use</a>\r\n                    <a href=\"https://www.google.com/\">Privacy Policy</a>\r\n                    <a href=\"https://www.google.com/\">Cookie Policy</a>\r\n                    <span className=\"copyright\">© Copyright 2019 - 2020 . planmyml. All rights reserved.</span>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nexport default class HomeView extends React.Component {\r\n    state = {\r\n        user: null,\r\n        error: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({ user })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view\">\r\n                <div className=\"home\">\r\n                    <div className=\"home-illustration\">\r\n                        <img alt=\"cute big img\"></img>\r\n                    </div>\r\n                    <div className=\"home-titles\">\r\n                        <h2 className=\"title\">Plan <b className=\"bold\">meals.</b><br />\r\n                            Track <b className=\"bold\">nutrition.</b><br />\r\n                            Reach your <b className=\"bold\">goals.</b>\r\n                        </h2>\r\n                        <p className=\"subtitle\">\r\n                            Create your flexible mealplan and input your actual meals.<br />\r\n                            Track your nutrition with our simplified graphics and adjust <br /> your plan to get your goals.\r\n                    </p>\r\n                        {this.state.user ? null : <NavLink className=\"btn-login\" to='/register'>CREATE YOUR ACCOUNT</NavLink>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import firebase from 'firebase';\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport default firebase;","import React from 'react';\r\nimport firebase from '../firebase/firebase'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class LoggedInHeader extends React.Component {\r\n    state = {\r\n        error: null\r\n    }\r\n    logOutUser = () => {\r\n        firebase.auth().signOut()\r\n            .then(window.location = \"/\")\r\n            .catch(error => {\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <span className=\"header-brand\">\r\n                    <NavLink to='/'><b className=\"bold\">plan</b>my.ml</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/plan'>Meal Plans</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/recipes'>Recipes</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/goals'>Progress</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/profile'>Profile</NavLink>\r\n                </span>\r\n                <span className=\"header-login\">\r\n                    <a href=\"/#\" className=\"btn-login\"  onClick={this.logOutUser}>LOG OUT</a>\r\n                </span>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport firebase from '../firebase/firebase';\r\nimport { Modal } from 'react-materialize';\r\n\r\nexport default class LoginPopUp extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        error: null\r\n    }\r\n\r\n    //change the state when the content change in the form\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    //handle the submit\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { email, password } = this.state;\r\n        firebase.auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({\r\n                    email: '',\r\n                    password: '',\r\n                    error: null,\r\n                    forget: false\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            })\r\n    }\r\n\r\n    //handle the forget password process\r\n    handleForget = (e) => {\r\n        e.preventDefault();\r\n        const { email } = this.state;\r\n        firebase.auth()\r\n            .sendPasswordResetEmail(email)\r\n            .then(() => {\r\n                this.setState({\r\n                    email: '',\r\n                    password: '',\r\n                    error: null,\r\n                    forget: false\r\n                });\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const LoginTrigger = <p onClick={()=> this.setState({forget: false})} className=\"btn-login\">LOGIN</p>;\r\n        //console.log(this.state);\r\n        return (\r\n            <Modal trigger={LoginTrigger} actions={false} className=\"login\">\r\n                {this.state.forget ?\r\n                    (<div>\r\n                        <h3 className=\"login-header\">Forgot your password?</h3>\r\n                        <form onSubmit={this.handleForget} className=\"form\">\r\n                            <p className=\"text\">Don't worry. We will send you a link so that you can restore it. </p>\r\n                            <br/>\r\n                            <label className=\"label\">Email:</label>\r\n                            <input required className=\"input\" type=\"text\" name=\"email\" id=\"email\" placeholder={\"Enter Email\"} onChange={this.handleChange} />\r\n                            <p className=\"forgot\" onClick={()=> this.setState({forget: false})}>I remembered!</p>\r\n                            <button type=\"submit\" className=\"btn-login\" >RESET PASSWORD</button>\r\n                        </form>\r\n                    </div>)\r\n                    :\r\n                    (<div>\r\n                        <h3 className=\"login-header\">Login Member</h3>\r\n                        <form onSubmit={this.handleSubmit} className=\"form\">\r\n                            <label className=\"label\">Email: </label>\r\n                            <input required className=\"input\" type=\"text\" name=\"email\" id=\"email\" placeholder={\"Enter Email\"} onChange={this.handleChange} />\r\n                            <br></br>\r\n                            <label className=\"label\">Password:</label>\r\n                            <input required className=\"input\" type=\"password\" id=\"password\" name=\"password\" placeholder={\"Enter Password\"} style={{}} onChange={this.handleChange} />\r\n                            <br></br>\r\n                            <p className=\"forgot\" onClick={()=> this.setState({forget: true})}>forgot your password?</p>\r\n                            <button type=\"submit\" className=\"btn-login\" >LOGIN</button>\r\n                        </form>\r\n                    </div>)\r\n                    }\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport LoginPopUP from '../authentication/loginPopUp';\r\n\r\nexport default class LoggedOutHeader extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <span className=\"header-brand\">\r\n                    <NavLink to='/'><b className=\"bold\">plan</b>my.ml</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/register'>Meal Plans</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/register'>Recipes</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/register'>Progress</NavLink>\r\n                </span>\r\n                <span className=\"header-link\">\r\n                    <NavLink to='/about'>About Us</NavLink>\r\n                </span>\r\n                <span className=\"header-login\">\r\n                    <LoginPopUP />\r\n                </span>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class SearchResultTile extends React.Component{\r\n    dragStart = e =>{\r\n        const foodObj={\r\n            label:this.props.label,\r\n            cal:this.props.Cal,\r\n            fat:this.props.Fat,\r\n            pro:this.props.Pro,\r\n            carbs:this.props. Carbs,\r\n            qty: this.props.Qty\r\n        };\r\n        var foodJSON=JSON.stringify(foodObj);\r\n\r\n        //NOTE: .setData takes a string argument for data to be passed, hence the JSON.stringify\r\n        e.dataTransfer.setData('foodJSON',foodJSON);\r\n\r\n        // setTimeout(() =>{\r\n        //     target.style.display=\"none\";\r\n        // },0)\r\n    }\r\n\r\n    dragOver = e =>{\r\n        e.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"api-item\"\r\n                 id={this.props.id}\r\n                 draggable={this.props.draggable}\r\n                 onDragStart={this.dragStart}\r\n                 onDragOver={this.dragOver}\r\n            >\r\n                <h3 className=\"food-title\">{this.props.label} <b className=\"food-qty\">({this.props.Qty} g)</b></h3>\r\n                <div className=\"food-info\" id={\"foodNutr\"+this.props.index}>\r\n                    <p className=\"info-line\"><b className=\"nutrient-name\">Calories</b>{this.props.Cal}kcal</p>\r\n                    <p className=\"info-line\"><b className=\"nutrient-name\">Fat</b>{this.props.Fat}g</p>\r\n                    <p className=\"info-line\"><b className=\"nutrient-name\">Carbs</b>{this.props.Carbs}g</p>\r\n                    <p className=\"info-line\"><b className=\"nutrient-name\">Protein</b>{this.props.Pro}g</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport {TextInput} from 'react-materialize';\r\nimport axios from 'axios';\r\nimport SearchResultTile from \"./SearchResultTile\";\r\nimport {db} from \"../firebase/firebase\";\r\nexport default class SearchBar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchTerm: '',\r\n\t\t\tresults: '',\r\n            qtyGrams: 100,\r\n\t\t}\r\n    }\r\n\r\n    componentDidMount() { //queries firebase when component mounted/loaded\r\n        db.collection(\"MealPlan\").doc(\"test\").get()\r\n            .then(doc => {\r\n                console.log(doc.data());\r\n            })\r\n    }\r\n\r\n    //change the state when the content change in the form\r\n\thandleChange = (e) => {\r\n        let val = e.target.value;\r\n        if(e.target.id === \"qtyGrams\"){\r\n            val = (+e.target.value);\r\n        }\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: val\r\n\t\t})\r\n\t}\r\n\r\n\t//Rounds a number to only \"exp\" decimals :\r\n    // https://stackoverflow.com/questions/1726630/formatting-a-number-with-exactly-two-decimals-in-javascript\r\n\tround = (value, exp) => {\r\n        if (typeof exp === 'undefined' || +exp === 0)\r\n            return Math.round(value);\r\n\r\n        value = +value;\r\n        exp = +exp;\r\n\r\n        if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0))\r\n            return 0;\r\n\r\n        // Shift\r\n        value = value.toString().split('e');\r\n        value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));\r\n\r\n        // Shift back\r\n        value = value.toString().split('e');\r\n        return +(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp));\r\n    }\r\n\r\n     keyPressed = async (event) => {\r\n        if (event.key === \"Enter\" || event.type === \"click\") {\r\n            document.body.style.cursor = \"progress\";\r\n\t\t\tlet urlFood=encodeURI(this.state.searchTerm);\r\n            //making a hard coded post request for an apple\r\n            let results= await axios.get(\"https://api.edamam.com/api/food-database/parser?ingr=\"\r\n                +urlFood+\"&app_id=9ccfd3ea&app_key=422e0ba66ae6c563f47a9fe391a437f0\")\r\n                .then(function(response){\r\n                    /*\r\n                    console.log(\"----------Response JSON----------\");\r\n                    console.log(response.data);\r\n                    console.log(\"---------------------------------\");\r\n                    */\r\n                    var obj=response.data;\r\n\r\n                    return obj;\r\n                })\r\n                .catch(function(error){\r\n                    console.log(error);\r\n                    return \"Error 400\";\r\n            })\r\n            //stops from setting state when user inputs empty string\r\n            if(results !== \"Error 400\"){\r\n                this.setState({\r\n                    results: results\r\n                })\r\n                document.body.style.cursor = \"default\";\r\n            }else{\r\n                console.log(\"Empty Search Parameters!\");\r\n                document.body.style.cursor = \"default\";\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //TODO: Add functionality that prevents multiple calls to the api at a time with a clear loading indicator\r\n\r\n    render() {\r\n\t\t//console.log(this.state);\r\n        return (\r\n            <div className=\"searchbar\">\r\n                <div className=\"search-header\">\r\n                    <h3 className=\"search-title\">Search your meals</h3>\r\n                    <TextInput placeholder=\"Search...\" icon=\"search\" className=\"search-input\" id=\"searchTerm\"\r\n                               onKeyPress={this.keyPressed} onChange={this.handleChange}/>\r\n\t\t\t\t\t<div className=\"icon-click\" onClick={this.keyPressed}>\r\n                    </div>\r\n                    <input className=\"qty-input\" id=\"qtyGrams\" type=\"number\" step=\"10\" min=\"0\" placeholder=\"100\"\r\n                           onChange={this.handleChange}></input>\r\n                    <p className=\"qty-label\" > g</p>\r\n                </div>\r\n                <div className=\"search-results\">\r\n\r\n                    {this.state.results.hints && this.state.results.hints!==\"\" ?\r\n                        this.state.results.hints.map((obj,index) => {\r\n                            return (\r\n                                    <SearchResultTile\r\n                                        id={\"foodRes\"+index}\r\n                                        key={\"foodRes\"+index}\r\n                                        draggable=\"true\"\r\n                                        index={index}\r\n                                        label={obj.food.label}\r\n                                        Cal={this.round(obj.food.nutrients.ENERC_KCAL*(this.state.qtyGrams/100), 2)}\r\n                                        Fat={this.round(obj.food.nutrients.FAT*(this.state.qtyGrams/100), 2)}\r\n                                        Carbs={this.round(obj.food.nutrients.CHOCDF*(this.state.qtyGrams/100), 2)}\r\n                                        Pro={this.round(obj.food.nutrients.PROCNT*(this.state.qtyGrams/100), 2)}\r\n                                        Qty={this.state.qtyGrams}\r\n                                    />\r\n                            );\r\n                        }) :\r\n                        (\r\n                            <div>\r\n                                   Search something! (we could add an ilustration)\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    {\r\n                        (this.state.results.hints && this.state.results.hints.length <= 0) ?\r\n                            (\r\n                                <div>\r\n                                    No results (we could add an ilustration)\r\n                                </div>\r\n                            ) : null\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Button,Icon} from 'react-materialize'\r\n\r\nexport default class FoodItem extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    //Function from article \"robinwieruch.de/react-state-array-add-update-remove\"\r\n    onRemoveItem=i=>{\r\n        this.setState();\r\n    }\r\n\r\n    render() {\r\n        const obj=this.props.obj;\r\n        return(\r\n            <div className=\"foodItem\" key={\"foodItem\"+ this.props.index}>\r\n                <p className=\"foodItemTitle gmd-1\">{obj.label}\r\n                <Button className=\"foodItemDel\"\r\n                        flat icon={<Icon>close</Icon>}\r\n                        onClick={this.props.onDel}\r\n                        value={this.props.index}\r\n                />\r\n                <b className=\"foodItemQty\">\r\n                    ({obj.qty}g)\r\n                </b>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport FoodItem from \"./FoodItem\";\r\n\r\nexport default class DragDropTest extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t//TODO:Calculate nutrition for entire dropBox\r\n\t\tthis.state = {\r\n\t\t\tfoodList: [],\r\n\t\t\ttotalNutr: {\r\n\t\t\t\tcal: \"\",\r\n\t\t\t\tfat: \"\",\r\n\t\t\t\tpro: \"\",\r\n\t\t\t\tcarbs: \"\",\r\n\t\t\t},\r\n\t\t\tfoodListNutr:{\r\n\t\t\t\tcal: \"\",\r\n\t\t\t\tfat: \"\",\r\n\t\t\t\tpro: \"\",\r\n\t\t\t\tcarbs: \"\",\r\n\t\t\t\tqty: 0\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.targetDel=this.targetDel.bind(this);\r\n\t}\r\n\r\n\tdrop = async e => {\r\n\t\te.preventDefault();\r\n\t\tconst foodJSON = e.dataTransfer.getData('foodJSON');\r\n\t\tconst foodObj = JSON.parse(foodJSON);\r\n\r\n\t\tawait this.setState(prevState => {\r\n\t\t\tlet foodList = prevState.foodList;\r\n\t\t\tlet temp = {\r\n\t\t\t\tlabel: foodObj.label,\r\n\t\t\t\tcal: foodObj.cal,\r\n\t\t\t\tfat: foodObj.fat,\r\n\t\t\t\tpro: foodObj.pro,\r\n\t\t\t\tcarbs: foodObj.carbs,\r\n\t\t\t\tqty: foodObj.qty\r\n\t\t\t};\r\n\t\t\t//console.log(temp);\r\n\t\t\tfoodList.push(temp);\r\n\t\t\tconsole.log(foodList);\r\n\t\t\treturn {foodList};\r\n\t\t})\r\n\t\t//e.target.appendChild(card);\r\n\t\tthis.groupFoodList();\r\n\t};\r\n\r\n\tdragOver = e => {\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\tonRemoveItem = i =>{\r\n\t\tthis.setState(state=>{\r\n\t\t\tconst foodList=state.foodList.filter((item,j) => i!==j);\r\n\t\t\treturn {foodList};\r\n\t\t});\r\n\t};\r\n\r\n\tasync targetDel(e){\r\n\t\tconsole.log(\"WOW! it was you NUMBER \"+e.currentTarget.value);\r\n\t\tlet i=parseInt(e.currentTarget.value);\r\n\t\tawait this.onRemoveItem(i);\r\n\t\tthis.groupFoodList();\r\n\t};\r\n\r\n\tgroupFoodList(){\r\n\r\n\t\tif(this.state.foodList.length > 0) {\r\n\t\t\t//Groups the food by label\r\n\t\t\tlet grpFood = this.state.foodList.reduce((acc, cv) => {\r\n\t\t\t\t//If its the first food with that labl that we find, we create an space in the array for it\r\n\t\t\t\tif (!acc[cv.label]) {\r\n\t\t\t\t\tacc[cv.label] = {};\r\n\t\t\t\t\tacc[cv.label].label = cv.label;\r\n\t\t\t\t\tacc[cv.label].cal = acc[cv.label].fat = acc[cv.label].pro = acc[cv.label].carbs = acc[cv.label].qty = 0;\r\n\t\t\t\t}\r\n\t\t\t\t//We add up the nutrients of the same label\r\n\t\t\t\tacc[cv.label].cal += cv.cal;\r\n\t\t\t\tacc[cv.label].fat += cv.fat;\r\n\t\t\t\tacc[cv.label].pro += cv.pro;\r\n\t\t\t\tacc[cv.label].carbs += cv.carbs;\r\n\t\t\t\tacc[cv.label].qty += (+cv.qty);\r\n\t\t\t\treturn acc;\r\n\t\t\t}, {});\r\n\r\n\t\t\t//This is an object of objects now with all of them grouped by name\r\n\r\n\t\t\t//Now we transform it to an array again\r\n\t\t\tgrpFood = Object.keys(grpFood).map(key => {\r\n\t\t\t\tlet { label, cal, fat, pro, carbs, qty } = grpFood[key];\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabel,cal,fat,pro,carbs,qty\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"Grouped:\");\r\n\t\t\tconsole.log(grpFood);\r\n\r\n\t\t\t//Now we calculate total nutrition\r\n\t\t\tlet totalNutr = grpFood.reduce((a,b) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcal: a.cal + b.cal,\r\n\t\t\t\t\tfat: a.fat + b.fat,\r\n\t\t\t\t\tpro: a.pro + b.pro,\r\n\t\t\t\t\tcarbs: a.carbs + b.carbs,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(\"Total:\");\r\n\t\t\tconsole.log(totalNutr);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tfoodList: grpFood,\r\n\t\t\t\ttotalNutr: totalNutr,\r\n\t\t\t})\r\n\r\n\t\t\tconsole.log(this.props);\r\n\t\t\tthis.props.getTotalNutr(totalNutr, this.props.index);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<td className=\"dropBox\"\r\n\t\t\t\t id={this.props.id}\r\n\t\t\t\t onDrop={this.drop}\r\n\t\t\t\t onDragOver={this.dragOver}\r\n\t\t\t>\r\n\t\t\t\t{this.state.foodList[0]?\r\n\t\t\t\t\tthis.state.foodList.map((obj,index) =>{\r\n\t\t\t\t\t\tconsole.log(this.state.foodList);\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<FoodItem\r\n\t\t\t\t\t\t\t\tobj={obj}\r\n\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\tonDel={this.targetDel}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>Empty</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t}\r\n\t\t\t</td>\r\n\t\t);\r\n\t};\r\n\r\n}\r\n","import React from 'react'\r\nimport DragDropBox from \"./DragDropBox\";\r\nexport default class WeekPlan extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <table className=\"mealplan\">\r\n                        <thead>\r\n                        <tr className=\"plan-header\">\r\n                            <th>Mon</th>\r\n                            <th>Tue</th>\r\n                            <th>Wed</th>\r\n                            <th>Thu</th>\r\n                            <th>Fri</th>\r\n                            <th>Sat</th>\r\n                            <th>Sun</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.rows}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nexport default class NutriScore extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            //all of this will be props\r\n            planned_values: {\r\n                kcal: 2000,\r\n                prots: 40,\r\n                carbs: 250,\r\n                fats: 100,\r\n            },\r\n            actual_values: {\r\n                kcal: 1800,\r\n                prots: 38,\r\n                carbs: 200,\r\n                fats: 150,\r\n            },\r\n            nutriscore: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            actual_values: this.props.actual_values,\r\n            planned_values: this.props.planned_values\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        var kcal = (this.props.actual_values.kcal/this.props.planned_values.kcal)*100;\r\n        var prots = (this.props.actual_values.prots/this.props.planned_values.prots)*100;\r\n        var carbs = (this.props.actual_values.carbs/this.props.planned_values.carbs)*100;\r\n        var fats = (this.props.actual_values.fats/this.props.planned_values.fats)*100;\r\n        console.log(kcal);\r\n\r\n        document.getElementById(\"kcalbar\").style.width= kcal + '%';\r\n        document.getElementById(\"protsbar\").style.width= prots + '%';\r\n        document.getElementById(\"carbsbar\").style.width= carbs + '%';\r\n        document.getElementById(\"fatsbar\").style.width= fats + '%';\r\n\r\n        /*\r\n        await this.setState({\r\n            nutriscore: {\r\n                kcal: kcal,\r\n                prots: prots,\r\n                carbs: carbs,\r\n                fats: fats,\r\n            },\r\n        });\r\n        */\r\n    }\r\n\r\n    //Rounds a number to only \"exp\" decimals :\r\n    // https://stackoverflow.com/questions/1726630/formatting-a-number-with-exactly-two-decimals-in-javascript\r\n    round = (value, exp) => {\r\n        if (typeof exp === 'undefined' || +exp === 0)\r\n            return Math.round(value);\r\n\r\n        value = +value;\r\n        exp = +exp;\r\n\r\n        if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0))\r\n            return 0;\r\n\r\n        // Shift\r\n        value = value.toString().split('e');\r\n        value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));\r\n\r\n        // Shift back\r\n        value = value.toString().split('e');\r\n        return +(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nutriscore\">\r\n                <h3 className=\"title\">NutriScore</h3>\r\n                <div className=\"nutribar-container\">\r\n                    <div className=\"nutribar\">\r\n                        <span className=\"bar\" id=\"kcalbar\"/>\r\n                        <span className=\"counter\">{this.round(this.props.actual_values.kcal,2)}\r\n                        /{this.state.planned_values.kcal}</span>\r\n                    </div>\r\n                    <div className=\"subtitle\">Calories: </div>\r\n                </div>\r\n                <div className=\"nutribar-container\">\r\n                    <div className=\"nutribar\">\r\n                        <span className=\"bar\" id=\"protsbar\"/>\r\n                        <span className=\"counter\">{this.round(this.props.actual_values.prots,2)}\r\n                        /{this.state.planned_values.prots}</span>\r\n                    </div>\r\n                    <div className=\"subtitle\">Prots: </div>\r\n                </div>\r\n                <div className=\"nutribar-container\">\r\n                    <div className=\"nutribar\">\r\n                        <span className=\"bar\" id=\"carbsbar\"/>\r\n                        <span className=\"counter\">{this.round(this.props.actual_values.carbs,2)}\r\n                        /{this.state.planned_values.carbs}</span>\r\n                    </div>\r\n                    <div className=\"subtitle\">Carbs: </div>\r\n                </div>\r\n                <div className=\"nutribar-container\">\r\n                    <div className=\"nutribar\">\r\n                        <span className=\"bar\" id=\"fatsbar\"/>\r\n                        <span className=\"counter\">{this.round(this.props.actual_values.fats,2)}\r\n                        /{this.state.planned_values.fats}</span>\r\n                    </div>\r\n                    <div className=\"subtitle\">Fats: </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport SearchBar from './searchBar';\r\nimport WeekPlan from './weekPlan';\r\nimport NutriScore from './nutriScore';\r\nimport DragDropBox from \"./DragDropBox\";\r\n// import DragDropTest from './DragDropTest';\r\n// import InitialBox from \"./testY\";\r\n\r\nexport default class MealPlannerPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rowcount: 0,\r\n            mealplansaved: false,\r\n            creationcheck: false,\r\n            totalNutrPlan:  {\r\n                kcal: 0,\r\n                prots: 0,\r\n                carbs: 0,\r\n                fats: 0,\r\n            },\r\n            totalNutrReal:  {\r\n                kcal: 0,\r\n                prots: 0,\r\n                carbs: 0,\r\n                fats: 0,\r\n            },\r\n            totalNutrRecomended:  {\r\n                kcal: 2000*7,\r\n                prots: 200*7,\r\n                carbs: 100*7,\r\n                fats: 80*7,\r\n            },\r\n            nutritionValues: [],\r\n            rows: [],\r\n        };\r\n        this.addRow = this.addRow.bind(this);\r\n        this.saveMealplan = this.saveMealplan.bind(this);\r\n        this.deleteMealplan = this.deleteMealplan.bind(this);\r\n        this.getTotalNutr = this.getTotalNutr.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.addRow();\r\n        await this.addRow();\r\n        await this.addRow();\r\n        //Retrieve from the database if the user already has a mealplan\r\n    }\r\n\r\n    getTotalNutr(tileNutr, key){\r\n        let totalNutrWeek;\r\n\r\n        this.state.nutritionValues[key] = tileNutr;\r\n        ++this.state.nutritionValues.length;\r\n\r\n        if(this.state.nutritionValues.length > 2){\r\n            let foodArray = this.state.nutritionValues;\r\n            foodArray = Object.keys(foodArray).map(key => {\r\n                let { cal, fat, pro, carbs } = foodArray[key];\r\n                return {\r\n                    cal,fat,pro,carbs\r\n                };\r\n            });\r\n            totalNutrWeek = foodArray.reduce((a,b) => {\r\n                console.log(a,b);\r\n                return ({\r\n                    cal: a.cal + b.cal,\r\n                    fat: a.fat + b.fat,\r\n                    pro: a.pro + b.pro,\r\n                    carbs: a.carbs + b.carbs,\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            totalNutrWeek = tileNutr;\r\n        }\r\n\r\n        console.log(this.state.nutritionValues);\r\n        console.log(\"total\");\r\n        console.log(totalNutrWeek);\r\n\r\n        this.setState(\r\n            {nutritionValues: this.state.nutritionValues,\r\n                totalNutrPlan:  {\r\n                    kcal: totalNutrWeek.cal,\r\n                    prots: totalNutrWeek.pro,\r\n                    carbs: totalNutrWeek.carbs,\r\n                    fats: totalNutrWeek.fat,\r\n                },\r\n        });\r\n    }\r\n\r\n    addRow() {\r\n        let rowkey = \"row\"+this.state.rowcount;\r\n        let joined = this.state.rows.concat(\r\n            <tr key={rowkey}>\r\n                <DragDropBox index={rowkey + \"mon\"} getTotalNutr={this.getTotalNutr}/>\r\n                <DragDropBox index={rowkey + \"tue\"} getTotalNutr={this.getTotalNutr}/>\r\n                <DragDropBox index={rowkey + \"wed\"} getTotalNutr={this.getTotalNutr}/>\r\n                <DragDropBox index={rowkey + \"thu\"} getTotalNutr={this.getTotalNutr}/>\r\n                <DragDropBox index={rowkey + \"fri\"} getTotalNutr={this.getTotalNutr}/>\r\n                <DragDropBox index={rowkey + \"sat\"} getTotalNutr={this.getTotalNutr}/>\r\n                <DragDropBox index={rowkey + \"sun\"} getTotalNutr={this.getTotalNutr}/>\r\n            </tr>\r\n        );\r\n        this.setState({ rows: joined,\r\n        rowcount: (++this.state.rowcount)})\r\n    }\r\n\r\n    saveMealplan(){\r\n        this.setState({mealplansaved: true});\r\n\r\n        //Here we should do the thing with the database\r\n    }\r\n\r\n    async deleteMealplan(){\r\n        await this.setState({\r\n            rowcount: 0,\r\n            mealplansaved: false,\r\n            creationcheck: true,\r\n            totalNutrPlan:  {\r\n                kcal: 0,\r\n                prots: 0,\r\n                carbs: 0,\r\n                fats: 0,\r\n            },\r\n            nutritionValues: [],\r\n            rows: [],});\r\n        await this.addRow();\r\n        await this.addRow();\r\n        await this.addRow();\r\n        //Here we should do the thing with the database\r\n    }\r\n\r\n    //Performs the creation process changing the view depending if the user has a mealplan saved or not\r\n    createProcess() {\r\n        if(this.state.mealplansaved){\r\n            return (\r\n                <div className=\"view\">\r\n                    <SearchBar/>\r\n                    <WeekPlan rows={this.state.rows}/>\r\n                    <div className=\"mp-settings\">\r\n                        <span className=\"btn-login del\" onClick={this.deleteMealplan}>DELETE</span>\r\n                        <span className=\"btn-login save\" onClick={this.saveMealplan}>SAVE</span>\r\n                    </div>\r\n                    <NutriScore planned_values={this.state.totalNutrRecomended} actual_values={this.state.totalNutrPlan}/>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if(this.state.creationcheck == true){\r\n                return (\r\n                    <div className=\"view\">\r\n                        <SearchBar/>\r\n                        <WeekPlan rows={this.state.rows}/>\r\n                        <div className=\"mp-settings\">\r\n                            <span className=\"btn-login add\" onClick={this.addRow}>ADD</span>\r\n                            <span className=\"btn-login rm\" onClick={this.addRow}>REMOVE</span>\r\n                            <span className=\"btn-login del\" onClick={this.deleteMealplan}>DELETE</span>\r\n                            <span className=\"btn-login save\" onClick={this.saveMealplan}>SAVE</span>\r\n                        </div>\r\n                        <NutriScore planned_values={this.state.totalNutrRecomended} actual_values={this.state.totalNutrPlan}/>\r\n                    </div>\r\n                )\r\n            }\r\n            else{\r\n                return (\r\n                    <div className=\"view create-help\">\r\n                        <div className=\"help-pic\">\r\n                           <img alt=\"screenshot - gif of how it works\"></img>\r\n                        </div>\r\n                        <div>\r\n                            <h3 className=\"title\">Create your first meal plan</h3>\r\n                            <p>1. Search your meals in our food searcher</p>\r\n                            <p>2. Drag them into your mealplan</p>\r\n                            <p>3. Let our app calculate for you the total nutritional values.</p>\r\n                            <p>Then, confirm your planned meals or edit them with your actual intake to see your real\r\n                            values.</p>\r\n                            <span className=\"btn-login\" onClick={()=>this.setState({creationcheck: true})}>\r\n                                Create your mealplan\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(this);\r\n        return (\r\n            this.createProcess()\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Avatar from \"../../images/avatar.svg\";\r\nimport {RadioGroup, Select} from 'react-materialize';\r\nimport firebase from '../firebase/firebase';\r\nexport default class Goals extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"results\">\r\n                <div className=\"user-details\">\r\n                    <div className=\"diet\">\r\n                    <br/>\r\n                        <Select\r\n                            onChange={function noRefCheck(){}}\r\n                            options={{\r\n                                classes: '',\r\n                                dropdownOptions: {alignment: 'left', autoTrigger: true, closeOnClick: true, constrainWidth: true, container: null, coverTrigger: true, hover: false, inDuration: 150, onCloseEnd: null, onCloseStart: null, onOpenEnd: null, onOpenStart: null, outDuration: 250}\r\n                            }} value=\"\">\r\n                            <option disabled value=\"\">Diet Plan</option>\r\n                            <option value=\"maintain\">Maintain Weight</option>\r\n                            <option value=\"loose\">Loose Weight</option>\r\n                            <option value=\"gain\">Gain Weight</option>\r\n                            <option value=\"protein\">High Protein</option>\r\n                            <option value=\"keto\">Ketogenic</option>\r\n                        </Select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"plan\">\r\n                    THIS IS THE CALCULATIONS FOR THE CALORIC INTAKE\r\n                    if male: x=(66 + (6.3x( weightkg x 2.205)) + (12.9 x (heightcm / 2.54)) - (6.8 x age))\r\n                    if female x=(665 +(4.3 x ( weightkg x 2.205)) + (4.7 X (heightcm / 2.54)) - (4.7 x age))\r\n\r\n                    light activity = x * 1.2\r\n                    moderate activity = x *1.55\r\n                    high activity = x*1.9\r\n                    <div className=\"maintain\">\r\n                        <br/>\r\n                        Maintain weight:\r\n                        your daily caloric intake = x;\r\n                        50% carbs\r\n                        30% protein\r\n                        20% fat\r\n                    </div>\r\n                    <div className=\"loose\">\r\n                        <br/>\r\n                        Loose weight:\r\n                        your daily caloric intake = x*.75;\r\n                        50% carbs\r\n                        30% protein\r\n                        20% fat\r\n                    </div>\r\n                    <div className=\"gain\">\r\n                        <br/>\r\n                        Gain weight:\r\n                        your daily caloric intake = x*1.25;\r\n                        50% carbs\r\n                        30% protein\r\n                        20% fat\r\n                    </div>\r\n                    <div className=\"protein\">\r\n                        <br/>\r\n                        High Protein:\r\n                        your daily caloric intake = x*1.10;\r\n                        40% carbs\r\n                        40% protein\r\n                        20% fat\r\n                    </div>\r\n                    <div className=\"keto\">\r\n                        <br/>\r\n                        Ketogenic:\r\n                        your daily caloric intake = x;\r\n                        10% carbs\r\n                        35% protein\r\n                        55% fat\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport firebase from '../firebase/firebase';\r\nimport Avatar from '../../images/avatar.svg';\r\nimport { RadioGroup, Select } from 'react-materialize';\r\n\r\nexport default class Profile extends React.Component {\r\n    state = {\r\n        user: null,\r\n        name: '',\r\n        age: '',\r\n        gender: null,\r\n        height: '',\r\n        weight: '',\r\n        activityLevel: '',\r\n        error: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({ user })\r\n                let profileRef = firebase.firestore().collection('profiles').doc(user.uid).get().then(doc => {\r\n                    this.setState((preState) => ({ ...preState.user, ...doc.data() })\r\n                    )\r\n                });\r\n            } else {\r\n                this.props.history.push('/');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const userId = this.state.user.uid;\r\n        const timestamp = new Date().toLocaleString();\r\n        const { name, age, gender, height, weight, activityLevel } = this.state;\r\n        //console.log(this.state)\r\n        firebase.firestore().collection('profiles').doc(userId)\r\n            .set({\r\n                name,\r\n                age,\r\n                height,\r\n                gender,\r\n                weight,\r\n                activityLevel,\r\n                timestamp: timestamp,\r\n            }).then(this.props.history.push('/profile')).catch(error => {\r\n                this.setState({ error })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        //console.log(this.state)\r\n        const { name, age, gender, height, weight, activityLevel, } = this.state;\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"user-details\">\r\n                    <div className=\"profile-id\">\r\n                        <img src={Avatar} alt=\"avatar\"></img><br></br>\r\n                        <h1 className=\"title\"></h1><h1 className=\"bold\">{name}</h1>\r\n                        <div><b className=\"bold\">email</b></div>\r\n                        <div><b className=\"bold\">password</b></div>\r\n                        <button className=\"submit\">edit details</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"extra-details\">\r\n                    <form onSubmit={this.handleSubmit} className=\"form\">\r\n                        <div className=\"hdr\">User Details</div>\r\n                        <div className=\"table\">\r\n                            <div className=\"row\">\r\n                                <div className=\"cell\">Name:</div>\r\n                                <div className=\"cell\"><input id=\"name\" required className=\"input\" type=\"text\" placeholder=\"Name\" onChange={this.handleChange} value={name}></input></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"cell\">Age:</div>\r\n                                <div className=\"cell\"><input id=\"age\" required className=\"input\" type=\"text\" placeholder=\"Age\" onChange={this.handleChange} value={age}></input></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"cell\">Gender:</div>\r\n                                <Select id=\"gender\" onChange={this.handleChange}\r\n                                    // onChange={function noRefCheck() { }}\r\n                                    // options={{\r\n                                    //     classes: '',\r\n                                    //     dropdownOptions: { alignment: 'left', autoTrigger: true, closeOnClick: true, constrainWidth: true, container: null, coverTrigger: true, hover: false, inDuration: 150, onCloseEnd: null, onCloseStart: null, onOpenEnd: null, onOpenStart: null, outDuration: 250 }\r\n                                    // }} \r\n                                    value={gender?gender:\"\"}>\r\n                                    <option\r\n                                        disabled\r\n                                        value=\"\"\r\n                                    >\r\n                                        Gender\r\n                                        </option>\r\n                                    <option value=\"Male\">\r\n                                        Male\r\n                                        </option>\r\n                                    <option value=\"Female\">\r\n                                        Female\r\n                                        </option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"cell\">Height (cm):</div>\r\n                                <div className=\"cell\"><input id=\"height\" required className=\"input\" type=\"text\" placeholder=\"Height\" onChange={this.handleChange} value={height}></input></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"cell\">Weight (kg):</div>\r\n                                <div className=\"cell\"><input id=\"weight\" required className=\"input\" type=\"text\" placeholder=\"Weight\" onChange={this.handleChange} value={weight}></input></div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"cell\">Activity level:</div>\r\n                                <Select id=\"activityLevel\" onChange={this.handleChange}\r\n                                    // onChange={function noRefCheck() { }}\r\n                                    // options={{\r\n                                    //     classes: '',\r\n                                    //     dropdownOptions: { alignment: 'left', autoTrigger: true, closeOnClick: true, constrainWidth: true, container: null, coverTrigger: true, hover: false, inDuration: 150, onCloseEnd: null, onCloseStart: null, onOpenEnd: null, onOpenStart: null, outDuration: 250 }\r\n                                    // }} \r\n                                    value={activityLevel?activityLevel:\"\"}>\r\n                                    <option\r\n                                        disabled\r\n                                        value=\"\"\r\n                                    >\r\n                                        Activity Level\r\n                                        </option>\r\n                                    <option value=\"Low\">\r\n                                        Low\r\n                                        </option>\r\n                                    <option value=\"Moderate\">\r\n                                        Moderate\r\n                                        </option>\r\n                                    <option value=\"High\">\r\n                                        High\r\n                                        </option>\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\" className=\"submit\">Submit</button>\r\n                            <div>\r\n                                {this.state.error ? <p>{this.state.error.message}</p> : null}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"achievements\">\r\n                    Achievements\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport firebase from 'firebase';\r\n\r\nexport default class Register extends React.Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        user: null,\r\n        error: null,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { email, password, confirmPassword } = this.state;\r\n        if (password.length >= 6) {\r\n            if (password === confirmPassword) {\r\n                firebase.auth()\r\n                    .createUserWithEmailAndPassword(email, password)\r\n                    .then(() => {\r\n                        this.props.history.push('/');\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ error })\r\n                    });\r\n            } else {\r\n                this.setState((preState) => ({ ...preState, error: { message: 'Two password are different' } }))\r\n            }\r\n        } else {\r\n            this.setState((preState) => ({ ...preState, error: { message: 'Password should be more than 6 characters' } }))\r\n        }\r\n        console.log(this.state.error)\r\n    }\r\n//eafasfsdf\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({ user })\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view\">\r\n                <div className=\"register\">\r\n                    {/*<h3 className=\"register-header\">Register Member</h3>*/}\r\n                    <div className=\"register-form\">\r\n                        {<h3 className=\"register-header\">Register Member</h3>}\r\n                        <br></br><br></br>\r\n                        <form onSubmit={this.handleSubmit} className=\"form\">\r\n                            <label className=\"label\">Email: </label>\r\n                            <input required className=\"input\" type=\"text\" name=\"email\" id=\"email\" placeholder={\"Enter Email\"} onChange={this.handleChange} />\r\n                            <label className=\"label\">Password:</label>\r\n                            <input required className=\"input\" type=\"password\" id=\"password\" name=\"password\" placeholder={\"Enter Password\"} style={{}} onChange={this.handleChange} />\r\n                            <label className=\"label\">Confirm Password:</label>\r\n                            <input required className=\"input\" type=\"password\" id=\"confirmPassword\" name=\"confirmPassword\" placeholder={\"Enter Password\"} style={{}} onChange={this.handleChange} />\r\n                            <br></br>\r\n                            {/*<a className=\"forgot\" onClick={()=> this.setState({forget: true})}>forgot your password?</a>*/}\r\n                            <button type=\"submit\" className=\"btn-login\" >REGISTER</button>\r\n                            <br></br>\r\n                            {this.state.error ? <p>{this.state.error.message}</p> : null}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './scss/styles.scss';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Footer from './components/layout/footer';\r\nimport HomeView from './components/home/homeview';\r\nimport firebase from './components/firebase/firebase';\r\nimport LoggedInHeader from './components/layout/loggedInHeader';\r\nimport LoggedOutHeader from './components/layout/loggedOutHeader';\r\nimport MealPlannerPage from './components/mealPlan/MealPlannerPage';\r\nimport Goals from './components/mealPlan/goals';\r\nimport Profile from './components/userInfo/profile';\r\nimport Register from './components/authentication/register';\r\n\r\n//all the components have moved to components directory, you can find the path there\r\n\r\nexport default class App extends React.Component {\r\n    state = {\r\n        user: null,\r\n        error: null,\r\n        //authenticated:null\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.setState({ user })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                {/* render different header for logged-in user and no-register user */}\r\n                {this.state.user ? <LoggedInHeader /> : <LoggedOutHeader />}\r\n                {/* render different body for various route */}\r\n                <Switch>\r\n                    <Route path=\"/\" component={HomeView} exact />\r\n                    <Route path='/home' component={HomeView} />\r\n                    <Route path='/plan' component={MealPlannerPage} />\r\n                    <Route path='/recipes' component={HomeView} />\r\n                    <Route path='/goals' component={Goals} />\r\n                    <Route path='/profile' component={Profile}/>\r\n                    <Route path='/register' component={Register}/>\r\n                </Switch>\r\n                <Footer/>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar.97b8107d.svg\";"],"sourceRoot":""}